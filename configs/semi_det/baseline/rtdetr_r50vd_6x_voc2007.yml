_BASE_: [
  '../../rt-detr/rtdetr_r50vd_6x_coco.yml',
]
log_iter: 50
snapshot_epoch: 2
weights: output/rtdetr_r50vd_6x_coco/model_final
pretrain_weights: https://paddledet.bj.bcebos.com/models/pretrained/ResNet50_vd_ssld_v2_pretrained.pdparams
metric: COCO
num_classes: 20
#before train, change voc to coco with voc2coco.py
# partial labeled COCO, use `SemiCOCODataSet` rather than `COCODataSet`
TrainDataset:
 !COCODataSet
    image_dir: VOC2007/JPEGImages
    anno_path: PseudoAnnotations/VOC2007_trainval.json
    dataset_dir:  dataset/voc/VOCdevkit
    data_fields: ['image', 'gt_bbox', 'gt_class', 'is_crowd']

EvalDataset:
  !COCODataSet
    image_dir: VOC2007/JPEGImages
    anno_path: PseudoAnnotations/VOC2007_test.json
    dataset_dir:  dataset/voc/VOCdevkit/
    allow_empty: true


worker_num: 4
TrainReader:
  sample_transforms:
    - Decode: {}
    - RandomDistort: {prob: 0.8}
    - RandomExpand: {fill_value: [123.675, 116.28, 103.53]}
    - RandomCrop: {prob: 0.8}
    - RandomFlip: {}
  batch_transforms:
    - BatchRandomResize: {target_size: [480, 512, 544, 576, 608, 640, 640, 640, 672, 704, 736, 768, 800], random_size: True, random_interp: True, keep_ratio: False}
    - NormalizeImage: {mean: [0., 0., 0.], std: [1., 1., 1.], norm_type: none}
    - NormalizeBox: {}
    - BboxXYXY2XYWH: {}
    - Permute: {}
  batch_size: 4
  shuffle: true
  drop_last: true
  collate_batch: false
  use_shared_memory: false


